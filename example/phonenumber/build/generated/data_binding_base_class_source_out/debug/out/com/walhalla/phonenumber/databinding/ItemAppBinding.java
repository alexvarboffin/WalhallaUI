// Generated by data binding compiler. Do not edit!
package com.walhalla.phonenumber.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.walhalla.phonenumber.R;
import com.walhalla.phonenumber.dashboard.WalhallaAppAdapter;
import com.walhalla.phonenumber.dashboard.WordModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemAppBinding extends ViewDataBinding {
  @NonNull
  public final RelativeLayout color;

  @NonNull
  public final ImageView crashlytics;

  @NonNull
  public final TextView features;

  @NonNull
  public final TextView fillName;

  @NonNull
  public final ImageView installedIcon;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final ImageView overflowMenu;

  @NonNull
  public final ImageView privacyPolicy;

  @NonNull
  public final RelativeLayout rootView;

  @NonNull
  public final TextView title;

  @Bindable
  protected WalhallaAppAdapter.Listener mListener;

  @Bindable
  protected WordModel mModel;

  protected ItemAppBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RelativeLayout color, ImageView crashlytics, TextView features, TextView fillName,
      ImageView installedIcon, LinearLayout main, ImageView overflowMenu, ImageView privacyPolicy,
      RelativeLayout rootView, TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.color = color;
    this.crashlytics = crashlytics;
    this.features = features;
    this.fillName = fillName;
    this.installedIcon = installedIcon;
    this.main = main;
    this.overflowMenu = overflowMenu;
    this.privacyPolicy = privacyPolicy;
    this.rootView = rootView;
    this.title = title;
  }

  public abstract void setListener(@Nullable WalhallaAppAdapter.Listener listener);

  @Nullable
  public WalhallaAppAdapter.Listener getListener() {
    return mListener;
  }

  public abstract void setModel(@Nullable WordModel model);

  @Nullable
  public WordModel getModel() {
    return mModel;
  }

  @NonNull
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_app, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemAppBinding>inflateInternal(inflater, R.layout.item_app, root, attachToRoot, component);
  }

  @NonNull
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_app, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemAppBinding>inflateInternal(inflater, R.layout.item_app, null, false, component);
  }

  public static ItemAppBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemAppBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemAppBinding)bind(component, view, R.layout.item_app);
  }
}
